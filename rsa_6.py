from Crypto.Util.number import getPrime, bytes_to_long
from secret import flag_6

def gcd(a, b):
    if b == 0:
        return a
    return gcd(b, a % b)


ee = [
    11,
    7537,
    8629,
    75041,
    1317523,
    144585541,
    206807178231933088453322502214220823168089479835740318389976406918442871865718257047030644734882797362540819872325054693325063
]

p = getPrime(256)
q = getPrime(256)

N = p * q
print("N =", N)
# N = 4769619445529967770961613935677007144267954253578023494389339786926995249856707082557847878935704518168074532278850526281118467253027361212105287672937243

c = bytes_to_long(flag_6)
for e in ee:
    c = pow(c, e, N)
print(c)
# c = 1060186200475318075120909313404793351002161701377256448368177760986570697960944809503533821686121232732912206215543531391840734703780674665618676996522442
